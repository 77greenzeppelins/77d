/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
'use client';
import React from 'react';
/**THREE Staff**/
import * as THREE from 'three';
/**Drei Staff**/
import { useGLTF } from '@react-three/drei';
/**Comoponents**/
import FrameMatcapTexture from '../../_Drei/textures/frameMatcapTextures/FrameMatcapTexture';
/**Hardcoded Staff**/
import { assetsPaths } from '@/data/basicData';
/**TS**/
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Plane: THREE.Mesh;
    Plane001: THREE.Mesh;
  };
  materials: {
    ['default']: THREE.MeshStandardMaterial;
    ['default']: THREE.MeshStandardMaterial;
  };
};

interface Props {
  groupProps: JSX.IntrinsicElements['group'];
}

/**------------------------------------------------------------**/
const SlimeFrame = ({ groupProps }: Props) => {
  /**GLTFLoader Section**/
  const { nodes } = useGLTF(assetsPaths.frame) as GLTFResult;

  /**JSX**/
  return (
    <group
      {...groupProps}
      //  dispose={null}
    >
      <mesh
        name="PlaneStandard"
        castShadow
        receiveShadow
        geometry={nodes.Plane.geometry}
        //   material={materials['default']}
        rotation={[Math.PI / 2, 0, 0]}
      >
        <FrameMatcapTexture textureIndex={'1'} />
      </mesh>
    </group>
  );
};

useGLTF.preload(assetsPaths.frame);

export default SlimeFrame;
